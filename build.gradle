buildscript {
    ext {
        kotlinVersion = '1.3.31'
        springBootVersion = '2.0.0.RELEASE'
        twitter4jVersion = '4.0.6'
        httpclientVersion = '4.5.3'
        commonsLangVersion = '3.5'
        daggerVersion = '2.14.1'
        autoFactoryVersion = '1.0-beta5'
        junitVersion = '4.12'
        mockitoKotlinVersion = '1.5.0'
    }
    repositories {
        jcenter()
        maven {
            url = 'https://plugins.gradle.org/m2/'
        }
    }
    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}"
        classpath "org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}"
    }
}

apply plugin: 'kotlin'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-spring'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

bootJar {
    version = '0.9.0'
}

repositories {
    jcenter()
}

sourceCompatibility = 1.8
compileKotlin {
    kotlinOptions {
        freeCompilerArgs = ["-Xjsr305=strict"]
        jvmTarget = "1.8"
    }
}
compileTestKotlin {
    kotlinOptions {
        freeCompilerArgs = ["-Xjsr305=strict"]
        jvmTarget = "1.8"
    }
}

kapt {
    correctErrorTypes = true
}

dependencies {
    compile 'org.springframework.boot:spring-boot-starter-web'
    compile 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'
    compile 'org.jetbrains.kotlin:kotlin-reflect'
    compile "org.twitter4j:twitter4j-core:${twitter4jVersion}"
    compile "org.twitter4j:twitter4j-stream:${twitter4jVersion}"
    compile "org.twitter4j:twitter4j-async:${twitter4jVersion}"
    compile "org.apache.httpcomponents:httpclient:${httpclientVersion}"
    compile "org.apache.commons:commons-lang3:${commonsLangVersion}"

    compile "com.google.dagger:dagger:${daggerVersion}"
    kapt "com.google.dagger:dagger-compiler:${daggerVersion}"

    compile "com.google.auto.factory:auto-factory:${autoFactoryVersion}"
    kapt "com.google.auto.factory:auto-factory:${autoFactoryVersion}"

    testCompile 'org.springframework.boot:spring-boot-starter-test'
    testCompile 'org.jetbrains.kotlin:kotlin-test'
    testCompile 'org.jetbrains.kotlin:kotlin-test-junit'
    testCompile "junit:junit:${junitVersion}"
    testCompile "com.nhaarman:mockito-kotlin:${mockitoKotlinVersion}"
}